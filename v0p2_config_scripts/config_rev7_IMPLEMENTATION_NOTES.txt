Program usage:
- Can call directly from bash (ie no need for 'python3 '): ./config_rev7.py <serialno>
- Input csv should not include 'K B ' in front of keys
- Current fixed values (20160406):
    - REV7 assigned to ttyUSB0
    - REV11 assigned to ttyUSB1
    - Input csv : "./keys.csv"    , Format: <serialNo>,<key>\n
    - Output csv: "./rev7test.csv", Format: <serialNo>,<key>,<nodeID>\n
- Will eventually add support for proper options (e.g. set serial devices, input and output files).
    - Will use getopts module for this
- Forces double write of key
- REQUIRES PYTHON 3.x

PySerial:
- Uses byte arrays but python 3 uses unicode by default. This means that:
    - Strings must be 'encoded' before passing to it: mybytes = mystring.encode()
    - Byte arrays received can be 'decoded' into strings: mystring = mybytes.decode()

RPi.GPIO with relay module:
- Connected LEDs light up a little at start because of floating pins
- Facing terminal blocks: | normallyopen | common | normallyclosed | (Needs verification)
- Our current setup:      |      A       |    B   |       NC       | (A and B are connections, NC not connected)
- REV7 switched on when GPIO driven LOW
- Connected to board pin 11 on my prototype (board pins are named according to header, BCM pins are named according to connection to chip)
- GPIO.cleanup() to avoid error messages

TODO:
- Proper command line options when calling
- Unit tests?
- Check if serial number/node id previously used?

CHANGELOG
    DE20161117: Added version numbering and changed to v2.
    AB20161117: Fixed REV7 POST check to only read start (i.e. not date/time part of string)